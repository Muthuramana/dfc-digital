@model DFC.Digital.Web.Sitefinity.Widgets.Mvc.Models.OnetImportResultsViewModel
<div>
    <h1 class="sfBreadCrumb">
        @Html.Raw(Model.PageTitle)
    </h1>
    
    <div id="workArea" class="sfWorkArea">
        @if (Model.IsAdmin)
        {
            <p>@Html.Raw(Model.FirstParagraph)</p>
            <br />
            using (Html.BeginForm("", "OnetDataImport", FormMethod.Post))
            {
                <select name="importmode">
                    <option value="importskills">Import Onet Skills</option>
                    <option value="updatesococcupationalcodes">Update SocCodes with Onet Occupational Codes</option>
                    <option value="updatejpdigitalskills">Update Job profiles with digital skills</option>
                    <option value="buildsocmatrix">Build Soc Matrix - create Soc to Onet Skill mapping which will allow contextualisation</option>
                    <option value="updatejpskills">Update Job Profiles with related Onet Skills</option>
                </select>
                <input class="submit sfLinkBtn sfSave" type="submit" value="Import Onet Data">
            }

        }
        else
        {
            <p>@Model.NotAllowedMessage</p>
        }
    </div>
    <div id="workArea" class="sfWorkArea">
        @if (Model.IsAdmin)
        {
            <h4>@Model.ActionCompleted - Import Action Summary</h4>
            <p> @Html.Raw(Model.SummaryDetails)</p>
            <br />

            if (!string.IsNullOrWhiteSpace(Model.ErrorMessages))
            {
                <h4>Error Details</h4>
                <p> @Html.Raw(Model.ErrorMessages)</p>
                <br />
            }


            <h4>Action Details</h4>
            <p> @Html.Raw(Model.ImportDetails)</p>
            <br />

            <h4>Other Messages</h4>
            <p> @Html.Raw(Model.OtherMessage)</p>
            <br />
        }
    </div>
</div>